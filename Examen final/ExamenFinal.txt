// EJERCICIO 1
const autos = [
  {
    marca: "Toyota",
    modelo: 2022,
    color: "rojo",
  },
  {
    marca: "Renault",
    modelo: 2015,
    color: "gris",
  },
  {
    marca: "Peugeot",
    modelo: 2017,
    color: "rojo",
  },
  {
    marca: "Fiat",
    modelo: 2021,
    color: "negro",
  },
];

const ultimoModelo = arr => {
    let autos = []
    for (let i = 0; i < arr.length; i++){
        if (arr[i].modelo >= 2020) {
            autos.push(arr[i])
        }
    }
    return autos
}

let datos = ultimoModelo(autos)
console.log(datos);

// EJERCICIO 2
let estudiantes = [
  {
    nombre: "juan",
    activo: true,
    notaPromedio: 5,
  },
  {
    nombre: "maria",
    activo: false,
    notaPromedio: 3,
  },
  {
    nombre: "florencia",
    activo: true,
    notaPromedio: 9,
  },
  {
    nombre: "carlos",
    activo: false,
    notaPromedio: 8,
  },
  {
    nombre: "jose",
    activo: true,
    notaPromedio: 6,
  },
];

const notasDesendentes = objeto => {

    let caja

    for (let i = 0; i < objeto.length; i++) {
        for (let j = 0; j < objeto.length - 1; j++) {
            if (objeto[j].notaPromedio < objeto[j + 1].notaPromedio) {
                caja = objeto[j]
                objeto[j] = objeto[j + 1]
                objeto[j + 1] = caja
            }
        }
    }
}

// EJERCICIO 4 Y 5

let notas = notasDesendentes(estudiantes)
console.log(estudiantes);

let matrix = [
  [1, 4, 7, 4],
  [5, 7, 6, 2],
  [6, 2, 3, 3],
  [2, 6, 8, 1],
];



const numerosDeUnaColumna = (mat, posicion) => {

    let numeros = []

    for (let i = 0; i < mat.length; i++) {
        numeros.push(mat[i][posicion]);
    }
    return numeros
}

let resultadoDeNumeros = numerosDeUnaColumna(matrix , 0)
console.log(resultadoDeNumeros);



const remplazando = (mat2 , n1) => {
    for (let i = 0; i < mat2.length; i++) {
        for (let j = 0; j < mat2.length; j++) {
            if (mat2[i][j] % 2 !== 0) {
                mat2[i][j] = n1
            }
        }
    }
}

let valores = remplazando(matrix , 0)
console.table(matrix);